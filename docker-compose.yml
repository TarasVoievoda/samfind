services:
  reverse-proxy:
    image: traefik:v3.1
    deploy:
      mode: global
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entryPoints.websecure.address=:443'
      - '--certificatesresolvers.myresolver.acme.tlschallenge=true'
      - '--certificatesresolvers.myresolver.acme.email=nazarii2314@gmail.com'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.dashboard.rule=Host(`traefik.onsio.io`)'
      - 'traefik.http.routers.dashboard.service=api@internal'
      - 'traefik.http.routers.dashboard.entrypoints=websecure'
      - 'traefik.http.routers.dashboard.tls.certresolver=myresolver'
      - 'traefik.http.services.dashboard.loadbalancer.server.port=8080'

  admin:
    image: nazarii2314/samfind-admin:latest
    platform: linux/arm64
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3
    env_file:
      - ./admin/.env
    environment:
      - NODE_ENV=production
      - PORT=4000
    command: ['npm', 'run', 'start']
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.admin.loadbalancer.server.port=4000'
      - 'traefik.http.routers.admin.rule=Host(`onsio.io`)'
      - 'traefik.http.routers.admin.entrypoints=websecure'
      - 'traefik.http.routers.admin.tls.certresolver=myresolver'
    networks:
      - traefik
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:4000']
      interval: 10s
      timeout: 5s
      retries: 3

  client:
    image: nazarii2314/samfind-client:latest
    platform: linux/arm64
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      - NODE_ENV=production
      - PORT=3000
    command: ['npm', 'run', 'start']
    init: true
    env_file:
      - ./client/.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.client.loadbalancer.server.port=3000'
      - 'traefik.http.routers.client.rule=Host(`www.onsio.io`)'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.tls.certresolver=myresolver'
    networks:
      - traefik
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:3000']
      interval: 10s
      timeout: 5s
      retries: 3

  server:
    image: nazarii2314/samfind-server:latest
    platform: linux/arm64
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      - NODE_ENV=production
      - PORT=4000
    command: ['node', 'dist/main']
    env_file:
      - ./server/.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.server.loadbalancer.server.port=4000'
      - 'traefik.http.routers.server.rule=Host(`api.onsio.io`)'
      - 'traefik.http.routers.server.entrypoints=websecure'
      - 'traefik.http.routers.server.tls.certresolver=myresolver'
    networks:
      - traefik
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:4000']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  letsencrypt:

networks:
  traefik:
    name: traefik
    external: true
